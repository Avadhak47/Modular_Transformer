#!/bin/bash
#PBS -N math_reasoning_training
#PBS -q gpuq
#PBS -l nodes=1:ppn=8:gpus=1
#PBS -l mem=32GB
#PBS -l walltime=24:00:00
#PBS -o /scratch/$USER/math_reasoning/logs/training_${PBS_JOBID}.out
#PBS -e /scratch/$USER/math_reasoning/logs/training_${PBS_JOBID}.err
#PBS -j oe

# Load required modules for IIT Delhi PADUM
module purge
module load apps/anaconda/3
# (Optional) module load apps/pytorch/1.10.0/gpu/intelpython3.7
# module load cuda/11.8

# Activate the environment cloned from base (no internet required)
conda activate ~/transformer_env

# Set environment variables
export CUDA_VISIBLE_DEVICES=0
export OMP_NUM_THREADS=8
export MKL_NUM_THREADS=8
export PYTHONPATH=/scratch/$USER/math_reasoning:$PYTHONPATH

# Create necessary directories
mkdir -p /scratch/$USER/math_reasoning/logs
mkdir -p /scratch/$USER/math_reasoning/checkpoints
mkdir -p /scratch/$USER/math_reasoning/results
mkdir -p /scratch/$USER/math_reasoning/data

# Change to working directory
cd /scratch/$USER/math_reasoning

# Run training with different positional encoding methods
python train.py --pe_type sinusoidal --epochs 10 --batch_size 8 --learning_rate 1e-4 --output_dir /scratch/$USER/math_reasoning/results/sinusoidal
python train.py --pe_type rope --epochs 10 --batch_size 8 --learning_rate 1e-4 --output_dir /scratch/$USER/math_reasoning/results/rope
python train.py --pe_type alibi --epochs 10 --batch_size 8 --learning_rate 1e-4 --output_dir /scratch/$USER/math_reasoning/results/alibi

# Run evaluation and comparison
python evaluate.py --results_dir /scratch/$USER/math_reasoning/results --output_file /scratch/$USER/math_reasoning/results/comparison_results.json

echo "Training and evaluation completed successfully!"
echo "Results saved to: /scratch/$USER/math_reasoning/results/" 